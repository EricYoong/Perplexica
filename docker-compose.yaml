services:
  # searxng:
  #   image: docker.io/searxng/searxng:latest
  #   volumes:
  #     - ./searxng:/etc/searxng:rw
  #   ports:
  #     - 4000:8080
  #   networks:
  #     - llm-network
  #   restart: unless-stopped

  perplexica-backend:
    build:
      context: .
      dockerfile: backend.dockerfile
      args:
        - SEARXNG_API_URL=${SEARXNG_API_URL}
    environment:
      - SEARXNG_API_URL=${SEARXNG_API_URL:-domain}
      - DOMAIN=${DOMAIN:-domain}
    volumes:
      - backend-dbstore:/home/perplexica/data
      - ./config.toml:/home/perplexica/config.toml
    labels:
      - traefik.enable=true
      - traefik.docker.network=coolify
      - traefik.http.routers.ppb.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.ppb.entrypoints=https
      - traefik.http.routers.ppb.service=ppb
      - traefik.http.services.ppb.loadbalancer.server.port=3001
      - traefik.http.routers.ppb.tls=true
      - traefik.http.routers.ppb.tls.certresolver=cloudflare
    networks:
      - llm-network
    restart: unless-stopped

  perplexica-frontend:
    build:
      context: .
      dockerfile: app.dockerfile
      args:
        - NEXT_PUBLIC_API_URL=https://${PPB_URL}/api
        - NEXT_PUBLIC_WS_URL=wss://${PPB_URL}
    environment:
      - PPB_URL=${PPB_URL:-domain}
      - P_URL=${P_URL:-domain}
    depends_on:
      - perplexica-backend
    networks:
      - llm-network
    labels:
      - traefik.enable=true
      - traefik.docker.network=coolify
      - traefik.http.routers.perplexica.rule=Host(`${P_URL}`)
      - traefik.http.routers.perplexica.entrypoints=https
      - traefik.http.routers.perplexica.service=perplexica
      - traefik.http.services.perplexica.loadbalancer.server.port=3000
      - traefik.http.routers.perplexica.tls=true
      - traefik.http.routers.perplexica.tls.certresolver=cloudflare
    restart: unless-stopped

networks:
  llm-network:


volumes:
  backend-dbstore:
